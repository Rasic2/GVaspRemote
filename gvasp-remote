#!/usr/bin/env bash

ProcessName=`echo $0 | xargs basename`
SrcDir=`realpath $0 | xargs dirname`
KeysDir=${SrcDir}/keys

source $SrcDir/color.sh
source $SrcDir/utils.sh

# Print help
function help(){
	echo
	echo -e "----------------->${RED} GVasp Remote Process Tool ${RESET}<-------------------------"
	echo
	echo -e "usage:"
	echo -e "	execute GVasp  | ${GREEN}${ProcessName} command${RESET} ${YELLOW}\"comand_string\"${RESET} ${GREEN}--key${RESET} ${YELLOW}host_user${RESET}"
	echo
	echo -e "	list files     | ${GREEN}${ProcessName} ls${RESET} ${GREEN}--key${RESET} ${YELLOW}host_user${RESET}"
	echo
	echo -e "	download files | ${GREEN}${ProcessName} download${RESET} ${GREEN}--key${RESET} ${YELLOW}host_user${RESET}"
	echo
	echo -e "------------------------------------------------------------------------"
	exit
}

if [[ -n $1 && $1 == "-h" ]];then
	help
fi

sub_command=""
gvasp_command=""
key_flag=0
remote_file=""

# Check subcommand
if [ $1 == "command" ];then
	sub_command="command"
elif [ $1 == "ls" ];then
	sub_command="ls"
elif [ $1 == "download" ];then
	sub_command="download"
else
	echo -e "${RED}Error: The subcommand of $ProcessName should be one of [command, ls, download], please see help (-h)!${RESET}"
	exit 1
fi

# Parse Args
until [ $# -eq 0 ]
do
	if [ $1 == "command" ];then
		gvasp_command=$2
		shift
		shift
	elif [ $1 == "ls" ];then
		shift
	elif [ $1 == "download" ];then
		shift
	elif [ $1 == "--key" ];then
		remote_file=$2
		shift
		shift
	fi
done

if [ -z $remote_file ];then
	echo -e "${RED}Error: The key is not specified!${RESET}"
	exit 1
fi

# Locate identify files
ip=`echo ${remote_file} | awk -F_ '{print $1}'`
user=`echo ${remote_file} | awk -F_ '{print $2}'`
port=22

check_ip $ip
if [ $IPFLAG -eq 0 ];then
	ip=`grep $ip ${KeysDir}/config 2>/dev/null | awk '{print $2}'`
	port=`grep $ip ${KeysDir}/config 2>/dev/null | awk '{print $3}'`
	check_ip $ip
	if [ $IPFLAG -eq 0 ];then
		echo
		echo -e "${RED}  !!!! Error: The key format is not right!${RESET}"
		echo
		exit 1
	fi
fi

default_args=(-i ${KeysDir}/${ip}_${user} -o PubkeyAcceptedKeyTypes=+ssh-dss)
ssh_args=("${default_args[@]}" -p $port $user@$ip)
scp_args=("${default_args[@]}" -P $port)
host=${ip}:${port}

# Start Process
echo
echo -e "----------------->${RED} GVasp Remote Process Tool ${RESET}<-------------------------"
echo
echo -e "+-----------------------+---------------------------------------------+"
if [ $sub_command == "command" ];then
	printf  "|${RED}  input command       ${RESET} | ${GREEN} %24s                  ${RESET} |\n" "$gvasp_command"
fi	
printf  "|${RED}  remote host         ${RESET} | ${GREEN} %18s (Host) %8s (USER) ${RESET} |\n" "$host" "$user"
echo -e "+-----------------------+---------------------------------------------+"

WorkDir=`pwd`
DirRemoveHOME=${WorkDir//$HOME}

# process the gvasp_command
if [ $sub_command == "command" ];then
	echo
	echo -e "${BOLD}#---> GVasp output${RESET}"
	eval $gvasp_command
	echo -e "${BOLD}<---# End GVasp output${RESET}"
	echo
fi

# Mapping remote and local directory
echo -e "${BOLD}#---> Mapping Directory:${RESET} ${BLUE}\$HOME${DirRemoveHOME}${RESET}"
ssh ${ssh_args[@]} "echo \${HOME}${DirRemoveHOME} > ~/.gvasp_remote"
if [ $sub_command == "command" ];then
	ssh ${ssh_args[@]} "mkdir -p \${HOME}${DirRemoveHOME}"
fi
scp ${scp_args[@]} $user@$ip:~/.gvasp_remote . > /dev/null
target_directory=`cat .gvasp_remote`
rm -rf .gvasp_remote

# Transfer or Download files
if [ $sub_command == "command" ];then
	echo
	echo -e "${BOLD}#---> Transfer files${RESET}"
	echo
	scp ${scp_args[@]} ./* $user@$ip:$target_directory
	echo
	echo -e "${BOLD}<---# End Transfer files${RESET}"
elif [ $sub_command == "ls" ];then
	echo
	echo -e "${BOLD}#---> List files${RESET}"
	echo
	ssh ${ssh_args[@]} "ls -lh $target_directory --color"
	echo
	echo -e "${BOLD}<---# End List files${RESET}"
elif [ $sub_command == "download" ];then
	echo
	echo -e "${BOLD}#---> Download files to ${BLUE}.download${RESET}"
	echo
	scp -r ${scp_args[@]} $user@$ip:$target_directory ./.download
	echo
	echo -e "${BOLD}<---# End Download files${RESET}"
fi

ssh ${ssh_args[@]} "rm -rf ~/.gvasp_remote;"
echo

# Record log
logfile=`date "+%Y-%m-%d"`.txt
if [ $sub_command == "command" ];then
	date "+%Y-%m-%d %H:%M:%S ($ProcessName) [$sub_command] `pwd` --> $target_directory" >> $HOME/logs/$logfile
elif [ $sub_command == "download" ];then
	date "+%Y-%m-%d %H:%M:%S ($ProcessName) [$sub_command] $target_directory --> `pwd`/.download" >> $HOME/logs/$logfile
fi
	
